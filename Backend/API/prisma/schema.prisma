generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Address {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  address     String    @unique @db.VarChar(60)
  street      String    @db.VarChar(45)
  houseNumber String?   @map("house_number") @db.VarChar(45)
  postalCode  String?   @map("postal_code") @db.VarChar(45)
  city        String?   @db.VarChar(45)
  uuid        String    @unique @db.VarChar(36) @default(uuid())
  timesUsed   Int       @default(1) @map("times_used") @db.UnsignedInt
  service     Service[]

  @@map("address")
}

model Article {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  name         String         @db.VarChar(60)
  unit         String         @db.VarChar(60)
  timesUsed    Int            @default(0) @map("times_used") @db.UnsignedInt
  description  String?        @db.VarChar(200)
  articleUsage articleUsage[]

  @@map("article")
}

model articleUsage {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  serviceId  Int      @map("service_id") @db.UnsignedInt
  personId   Int      @map("person_id") @db.UnsignedInt
  annotation String?  @db.VarChar(300)
  articleId  Int      @map("article_id") @db.UnsignedInt
  quantity   Int      @db.UnsignedInt
  time       DateTime @db.DateTime(0)
  status     String?  @default("Verbraucht") @db.VarChar(45)
  uuid       String   @unique @db.VarChar(36) @default(uuid())
  article    Article  @relation(fields: [articleId], references: [id])
  usedBy     Person   @relation(fields: [personId], references: [id])
  service    Service  @relation(fields: [serviceId], references: [id])

  @@index([articleId], name: "fk_article_usage_article_idx")
  @@index([personId], name: "fk_article_usage_person1_idx")
  @@index([serviceId], name: "fk_article_usage_service1_idx")
  @@map("article_usage")
}

model medicalService {
  id            Int     @unique @default(autoincrement()) @db.UnsignedInt
  serviceId     Int     @unique @map("service_id") @db.UnsignedInt
  number        String  @unique @db.VarChar(45)
  contactPerson String? @map("contact_person") @db.VarChar(45)
  annotations   String? @db.VarChar(200)
  uuid          String  @unique @db.VarChar(36) @default(uuid())
  service       Service @relation(fields: [serviceId], references: [id])

  @@id([id, serviceId])
  @@index([serviceId], name: "fk_medical_service_service1_idx")
  @@map("medical_service")
}

model Person {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  firstName    String         @map("first_name") @db.VarChar(60)
  lastName     String         @map("last_name") @db.VarChar(60)
  uuid         String         @unique @db.VarChar(36) @default(uuid())
  articleUsage articleUsage[]
  service      Service[]      @relation("personToservice")

  @@unique([firstName, lastName], name: "full_name")
  @@map("person")
}

model Service {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  addressId      Int?            @map("address_id") @db.UnsignedInt
  person_id      Int             @db.UnsignedInt
  title          String          @db.VarChar(70)
  start          DateTime        @db.DateTime(0)
  end            DateTime        @db.DateTime(0)
  active         Int             @default(1) @db.TinyInt
  uuid           String          @unique @db.VarChar(36) @default(uuid())
  address        Address?        @relation(fields: [addressId], references: [id])
  responsible    Person          @relation("personToservice", fields: [person_id], references: [id])
  articleUsage   articleUsage[]
  medicalService medicalService?

  @@index([addressId], name: "fk_service_address1_idx")
  @@index([person_id], name: "fk_service_person1_idx")
  @@map("service")
}
